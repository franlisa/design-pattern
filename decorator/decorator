第三个模式
装饰者模式：动态的将责任附加到对象上，想要扩展功能，装饰者提供有别于继承的另一种方式。
装饰者可以在所委托被装饰的行为之前或者之后，加上自己的行为，达到特定的目的
增加的原则：
为扩展开放，为修改关闭
API； java.io  例如